# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io
  SERVICE: marine-defrag-api

jobs:
  build-and-push-image:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/deployment' }}
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Tag
        id: tag
        run: |
          echo "tag=$(git rev-parse "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
          labels: |
            "service=${{ env.SERVICE }}"

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    env:
      BUNDLE_GEMFILE: gemfiles/deploy
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}

      - name: Deploy command
        run: bin/kamal deploy --skip-push
        env:
          DEPLOY_LETSENCRYPT_EMAIL: ${{ secrets.DEPLOY_LETSENCRYPT_EMAIL }}
          DEPLOY_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY_REGISTRY: ${{ env.REGISTRY }}
          DEPLOY_SSH_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          DEPLOY_USERNAME: ${{ github.actor }}
          DEPLOY_WEB_HOST: ${{ secrets.DEPLOY_WEB_HOST }}
          POSTGRES_DB: ${{ secrets.DEPLOY_POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.DEPLOY_POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DEPLOY_POSTGRES_USER }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
